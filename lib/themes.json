{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Strategery API",
    "description": "A Strategery list API based on Swagger and built using Node.js"
  },
  "tags": [
    {
      "name": "Strategery",
      "description": "Operations about Strategery",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Map",
      "description": "Operations about StrategeryMap"
    },
    {
      "name": "Theme",
      "description": "Operations about StrategeryTheme"
    },
    {
      "name": "Perspective",
      "description": "Operations about StrategeryPerspective"
    },
    {
      "name": "Scorecard",
      "description": "Operations about StrategeryScorecard"
    },
    {
      "name": "Objective",
      "description": "Operations about StrategeryObjective"
    },
    {
      "name": "Measure",
      "description": "Operations about StrategeryMeasure"
    },
    {
      "name": "Initiative",
      "description": "Operations about StrategeryInitiative"
    },
    {
      "name": "Task",
      "description": "Operations about StrategeryTask"
    },
    {
      "name": "Contacts",
      "description": "Access to contact info"
    },
    {
      "name": "owner",
      "description": "Operations about owner",
      "externalDocs": {
        "description": "Find out more about owner",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Strategery"
        ],
        "operationId": "strategery_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Strategery"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "Strategery"
        ],
        "operationId": "strategery_getById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Strategery"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Strategery"
        ],
        "summary": "Updates a strategery with form data",
        "description": "",
        "operationId": "updateStrategeryWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of strategery that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Updated title of the strategery",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the strategery",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          
        ]
      },
      "delete": {
        "tags": [
          "Strategery"
        ],
        "summary": "Deletes a Strategery",
        "description": "",
        "operationId": "deleteStrategery",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Strategery id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Strategerynot found"
          }
        },
        "security": [
          
        ]
      }
    },
    "/maps": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "StrategeryMap_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/maps/{id}": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "StrategeryMap_getById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/themes": {
      "get": {
        "tags": [
          "Theme"
        ],
        "operationId": "StrategeryTheme_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Theme"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/perspectives": {
      "get": {
        "tags": [
          "Perspective"
        ],
        "operationId": "StrategeryPerspective_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Perspective"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/scorecards": {
      "get": {
        "tags": [
          "Scorecard"
        ],
        "operationId": "StrategeryScorecard_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Scorecard"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/objectives": {
      "get": {
        "tags": [
          "Objective"
        ],
        "operationId": "StrategeryObjective_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Objective"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/measures": {
      "get": {
        "tags": [
          "Measure"
        ],
        "operationId": "getMeasure",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Measure"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/measures/{id}": {
      "get": {
        "tags": [
          "Measure"
        ],
        "operationId": "getMeasure_ById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Measure"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/initiatives": {
      "get": {
        "tags": [
          "Initiative"
        ],
        "operationId": "getInitiative",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Initiative"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/initiatives/{id}": {
      "get": {
        "tags": [
          "Initiative"
        ],
        "operationId": "getInitiative_ById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Initiative"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "getTask",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "getTask_ById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "contacts_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "contacts_getById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/pet": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "Update an existing pet",
        "description": "",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "",
        "operationId": "updatePetWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the pet",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "description": "",
        "operationId": "deletePet",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Strategery": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "example": "strategery"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "Map": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "themes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Theme"
          }
        },
        "persepctives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Perspective"
          }
        },
        "scorecards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scorecard"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measure"
          }
        },
        "objectives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Objective"
          }
        },
        "initiatives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Initiative"
          }
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "keywords": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Theme": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Perspective": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Scorecard": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Objective": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "parentid": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startdate": {
          "type": "string"
        },
        "enddate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Measure": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "parentid": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startdate": {
          "type": "string"
        },
        "enddate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Initiative": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "parentid": {
          "format": "int32",
          "type": "integer"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusupdate": {
          "type": "string"
        },
        "statuscolor": {
          "type": "string"
        },
        "statuscolor": {
          "type": "string"
        },
        "percentcomplete": {
          "format": "int32",
          "type": "integer"
        },
        "activeflag": {
          "type": "boolean"
        },
        "subinitiatives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Initiative"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measure"
          }
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/task"
          }
        },
        "owner": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "parentid": {
          "format": "int32",
          "type": "integer"
        },
        "keywords": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusupdate": {
          "type": "string"
        },
        "statuscolor": {
          "type": "string"
        },
        "statuscolor": {
          "type": "string"
        },
        "percentcomplete": {
          "format": "int32",
          "type": "integer"
        },
        "activeflag": {
          "type": "boolean"
        },
        "initiative": {
          "$ref": "#/definitions/Initiative"
        },
        "assignedto": {
          "$ref": "#/definitions/Contact"
        },
        "assignedby": {
          "$ref": "#/definitions/Contact"
        },
        "pmtask": {
          "format": "int32",
          "type": "integer"
        },
        "userdefinedfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UDF"
          }
        },
        "attacheddocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Doc"
          }
        },
        "shortname": {
          "type": "string"
        }
      }
    },
    "Owner": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "UserStatus"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "petstatusinthestore",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "UDF": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Doc": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Keywords": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Keyword"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    }
  }
}
