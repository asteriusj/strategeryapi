{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Strategery API",
    "description": "A Strategery list API based on Swagger and built using Node.js"
  },
  "tags": [
    {
      "name": "Strategery",
      "description": "",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Contacts",
      "description": "Access to "
    },
    {
      "name": "owner",
      "description": "Operations about owner",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/strategery": {
      "get": {
        "tags": [
          "Strategery"
        ],
        "operationId": "getStrategery",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Strategery"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "post": {
      "tags": [
        "Strategery"
      ],
      "summary": "Add a new Strategery",
      "description": "",
      "operationId": "addStrategery",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/xml",
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Strategery object that needs to be added",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Strategery"
          }
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "/strategery/findByStatus": {
      "get": {
        "tags": [
          "Strategery"
        ],
        "summary": "Finds Strategery by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findStrategeryByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inprocess",
                "inactive"
              ],
              "default": "active"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StrategyMap"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/strategery/{id}": {
      "get": {
        "tags": [
          "Strategery"
        ],
        "operationId": "getStrategeryById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Strategery"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Strategery"
        ],
        "summary": "Updates a strategerywith form data",
        "description": "",
        "operationId": "updateStrategeryWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of strategerythat needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Updated title of the strategery",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the strategery",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "contacts_get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "contacts_getById",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Strategery": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "typeOf": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "example": "strategery"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "shortname": {
          "type": "string"
        }
      }
    }
  }
}
